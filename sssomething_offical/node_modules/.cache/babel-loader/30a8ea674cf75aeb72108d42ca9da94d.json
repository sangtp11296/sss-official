{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangt\\\\OneDrive\\\\Sang Shares Something\\\\Sang Shares Something\\\\sssomething_offical\\\\src\\\\components\\\\Layout\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './Header.module.css';\nimport MainNavbar from './MainNavigation/MainNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(props) {\n  _s();\n\n  const [white, setWhite] = useState(false);\n  const [hide, setHide] = useState(false);\n\n  const scrollDetect = () => {\n    var oldPosition = 0;\n    let newPosition = window.pageYOffset;\n\n    if (newPosition >= 100) {\n      setWhite(true);\n    } else {\n      setWhite(false);\n    } // if (newPosition-oldPosition > 0){\n    //     console.log('down');\n    // }\n    // if (newPosition-oldPosition < 0){\n    //     console.log('up');\n    // }\n\n\n    console.log('old = ', oldPosition);\n    console.log('new = ', newPosition);\n    oldPosition = newPosition;\n  };\n\n  window.addEventListener('scroll', scrollDetect); // function scrollDetect(){\n  //     var lastScroll = 0;\n  //     window.onscroll = function() {\n  //         let currentScroll = document.documentElement.scrollTop || document.body.scrollTop; // Get Current Scroll Value\n  //         // if (currentScroll > 0 && lastScroll <= currentScroll){\n  //         //   lastScroll = currentScroll;\n  //         //   console.log('down')\n  //         // }else{\n  //         //   lastScroll = currentScroll;\n  //         //   console.log('up')\n  //         // }\n  //         if(currentScroll>=100){\n  //             setWhite(true)\n  //         }\n  //         else{\n  //             setWhite(false)\n  //         }\n  //     };\n  //   }\n  //   scrollDetect();\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: `${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide ? styles.hide : ''}`,\n    children: /*#__PURE__*/_jsxDEV(MainNavbar, {\n      whiteHeader: white ? \"true\" : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"AFbvddHpVMKgkeZDxevlq9UGFhM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/sangt/OneDrive/Sang Shares Something/Sang Shares Something/sssomething_offical/src/components/Layout/Header/Header.js"],"names":["React","useState","styles","MainNavbar","Header","props","white","setWhite","hide","setHide","scrollDetect","oldPosition","newPosition","window","pageYOffset","console","log","addEventListener","transparentNavbar","whiteNavbar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAK,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAA/B;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACvB,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,WAAW,GAAGC,MAAM,CAACC,WAAzB;;AACA,QAAGF,WAAW,IAAI,GAAlB,EAAsB;AAClBL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEM;AACFA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAPsB,CAQvB;AACA;AAEA;AACA;AACA;AACA;;;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,WAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,WAAtB;AACAD,IAAAA,WAAW,GAAGC,WAAd;AACH,GAlBD;;AAmBAC,EAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCP,YAAlC,EAxBkC,CAyBlC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAG,GAAER,MAAM,CAACgB,iBAAkB,IAAGZ,KAAK,GAAGJ,MAAM,CAACiB,WAAV,GAAwB,EAAG,IAAGX,IAAI,GAACN,MAAM,CAACM,IAAR,GAAa,EAAG,EAAzG;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEF,KAAK,GAAG,MAAH,GAAU;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtDuBF,M;;KAAAA,M","sourcesContent":["import React, {useState} from 'react'\r\nimport styles from './Header.module.css'\r\nimport MainNavbar from './MainNavigation/MainNavbar'\r\n\r\nexport default function Header(props) {\r\n\r\n    const[white, setWhite] = useState(false);\r\n    const[hide, setHide] = useState(false);\r\n\r\n    const scrollDetect = () => {\r\n        var oldPosition = 0;\r\n        let newPosition = window.pageYOffset;\r\n        if(newPosition >= 100){\r\n            setWhite(true);\r\n        } else{\r\n            setWhite(false);\r\n        }\r\n        // if (newPosition-oldPosition > 0){\r\n        //     console.log('down');\r\n            \r\n        // }\r\n        // if (newPosition-oldPosition < 0){\r\n        //     console.log('up');\r\n        // }\r\n        console.log('old = ', oldPosition)\r\n        console.log('new = ', newPosition)\r\n        oldPosition = newPosition;\r\n    }\r\n    window.addEventListener('scroll', scrollDetect)\r\n    // function scrollDetect(){\r\n    //     var lastScroll = 0;\r\n      \r\n    //     window.onscroll = function() {\r\n    //         let currentScroll = document.documentElement.scrollTop || document.body.scrollTop; // Get Current Scroll Value\r\n    //         // if (currentScroll > 0 && lastScroll <= currentScroll){\r\n    //         //   lastScroll = currentScroll;\r\n    //         //   console.log('down')\r\n    //         // }else{\r\n    //         //   lastScroll = currentScroll;\r\n    //         //   console.log('up')\r\n    //         // }\r\n    //         if(currentScroll>=100){\r\n    //             setWhite(true)\r\n    //         }\r\n    //         else{\r\n    //             setWhite(false)\r\n    //         }\r\n    //     };\r\n    //   }\r\n      \r\n      \r\n    //   scrollDetect();\r\n\r\n    return (\r\n        <header className={`${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide?styles.hide:''}`}>\r\n            <MainNavbar whiteHeader={white ? \"true\":''}/>\r\n        </header>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}