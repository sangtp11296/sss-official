{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangt\\\\OneDrive\\\\Sang Shares Something\\\\Sang Shares Something\\\\sssomething_offical\\\\src\\\\components\\\\Layout\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './Header.module.css';\nimport MainNavbar from './MainNavigation/MainNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(props) {\n  _s();\n\n  const [white, setWhite] = useState(false);\n  const [hide, setHide] = useState(false);\n\n  const changeWhite = () => {\n    let newPosition = window.scrollY;\n\n    if (newPosition >= 100) {\n      setWhite(true);\n    } else {\n      setWhite(false);\n    }\n  };\n\n  function scrollDetect() {\n    var lastScroll = 0;\n\n    window.onscroll = function () {\n      // let currentScroll = document.documentElement.scrollTop || document.body.scrollTop; // Get Current Scroll Value\n      let currentScroll = window.documentElement.scrollTop || window.body.scrollTop; // Get Current Scroll Value\n\n      if (currentScroll > 0 && lastScroll <= currentScroll) {\n        lastScroll = currentScroll;\n        console.log('down');\n      } else {\n        lastScroll = currentScroll;\n        console.log('up');\n      }\n    };\n  }\n\n  scrollDetect();\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: `${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide ? styles.hide : ''}`,\n    children: /*#__PURE__*/_jsxDEV(MainNavbar, {\n      whiteHeader: white ? \"true\" : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"AFbvddHpVMKgkeZDxevlq9UGFhM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/sangt/OneDrive/Sang Shares Something/Sang Shares Something/sssomething_offical/src/components/Layout/Header/Header.js"],"names":["React","useState","styles","MainNavbar","Header","props","white","setWhite","hide","setHide","changeWhite","newPosition","window","scrollY","scrollDetect","lastScroll","onscroll","currentScroll","documentElement","scrollTop","body","console","log","transparentNavbar","whiteNavbar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAK,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAA/B;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACtB,QAAIC,WAAW,GAAGC,MAAM,CAACC,OAAzB;;AACA,QAAGF,WAAW,IAAI,GAAlB,EAAsB;AAClBJ,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEM;AACFA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,GAPD;;AAQA,WAASO,YAAT,GAAuB;AACnB,QAAIC,UAAU,GAAG,CAAjB;;AAEAH,IAAAA,MAAM,CAACI,QAAP,GAAkB,YAAW;AACzB;AACA,UAAIC,aAAa,GAAGL,MAAM,CAACM,eAAP,CAAuBC,SAAvB,IAAoCP,MAAM,CAACQ,IAAP,CAAYD,SAApE,CAFyB,CAEsD;;AAE/E,UAAIF,aAAa,GAAG,CAAhB,IAAqBF,UAAU,IAAIE,aAAvC,EAAqD;AACnDF,QAAAA,UAAU,GAAGE,aAAb;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,OAHD,MAGK;AACHP,QAAAA,UAAU,GAAGE,aAAb;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;AACJ,KAXD;AAYD;;AAGDR,EAAAA,YAAY;AAEd,sBACI;AAAQ,IAAA,SAAS,EAAG,GAAEZ,MAAM,CAACqB,iBAAkB,IAAGjB,KAAK,GAAGJ,MAAM,CAACsB,WAAV,GAAwB,EAAG,IAAGhB,IAAI,GAACN,MAAM,CAACM,IAAR,GAAa,EAAG,EAAzG;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEF,KAAK,GAAG,MAAH,GAAU;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtCuBF,M;;KAAAA,M","sourcesContent":["import React, {useState} from 'react'\r\nimport styles from './Header.module.css'\r\nimport MainNavbar from './MainNavigation/MainNavbar'\r\n\r\nexport default function Header(props) {\r\n\r\n    const[white, setWhite] = useState(false);\r\n    const[hide, setHide] = useState(false);\r\n\r\n    const changeWhite = () => {\r\n        let newPosition = window.scrollY;\r\n        if(newPosition >= 100){\r\n            setWhite(true);\r\n        } else{\r\n            setWhite(false);\r\n        }\r\n    }\r\n    function scrollDetect(){\r\n        var lastScroll = 0;\r\n      \r\n        window.onscroll = function() {\r\n            // let currentScroll = document.documentElement.scrollTop || document.body.scrollTop; // Get Current Scroll Value\r\n            let currentScroll = window.documentElement.scrollTop || window.body.scrollTop; // Get Current Scroll Value\r\n      \r\n            if (currentScroll > 0 && lastScroll <= currentScroll){\r\n              lastScroll = currentScroll;\r\n              console.log('down')\r\n            }else{\r\n              lastScroll = currentScroll;\r\n              console.log('up')\r\n            }\r\n        };\r\n      }\r\n      \r\n      \r\n      scrollDetect();\r\n\r\n    return (\r\n        <header className={`${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide?styles.hide:''}`}>\r\n            <MainNavbar whiteHeader={white ? \"true\":''}/>\r\n        </header>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}