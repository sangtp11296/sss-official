{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangt\\\\OneDrive\\\\Sang Shares Something\\\\Sang Shares Something\\\\sssomething_offical\\\\src\\\\Pages\\\\Post\\\\Post.js\";\nimport React from 'react';\nimport styles from './Post.module.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post(props) {\n  // console.log(props.post.title)\n  function toSlug(str) {\n    // Chuyển hết sang chữ thường\n    str = str.toLowerCase(); // xóa dấu\n\n    str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ|ä)/g, 'a');\n    str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\n    str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\n    str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ|ö)/g, 'o');\n    str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ|ü)/g, 'u');\n    str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\n    str = str.replace(/(đ)/g, 'd');\n    str = str.replace(/(ß)/g, 'B'); // Xóa ký tự đặc biệt\n\n    str = str.replace(/([^0-9a-z-\\s])/g, ''); // Xóa khoảng trắng thay bằng ký tự -\n\n    str = str.replace(/(\\s+)/g, '-'); // xóa phần dự - ở đầu\n\n    str = str.replace(/^-+/g, ''); // xóa phần dư - ở cuối\n\n    str = str.replace(/-+$/g, ''); // return\n\n    return str;\n  }\n\n  console.log(toSlug(props.post.title));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.post,\n    children: [props.post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.postImg,\n      src: props.post.photo,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postTitle,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/post/${props.post._id}`,\n          children: props.post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postDescription,\n        children: props.post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.postDate,\n        children: new Date(props.post.createdAt).toDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postCats,\n        children: props.post.categories.map((c, id) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.postCat,\n          children: c\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/sangt/OneDrive/Sang Shares Something/Sang Shares Something/sssomething_offical/src/Pages/Post/Post.js"],"names":["React","styles","Link","Post","props","toSlug","str","toLowerCase","replace","console","log","post","title","photo","postImg","postInfo","postTitle","_id","postDescription","desc","postDate","Date","createdAt","toDateString","postCats","categories","map","c","id","postCat"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styles from './Post.module.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Post(props) {\r\n    // console.log(props.post.title)\r\n    function toSlug(str)\r\n    {\r\n        // Chuyển hết sang chữ thường\r\n        str = str.toLowerCase();     \r\n    \r\n        // xóa dấu\r\n        str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ|ä)/g, 'a');\r\n        str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\r\n        str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\r\n        str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ|ö)/g, 'o');\r\n        str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ|ü)/g, 'u');\r\n        str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\r\n        str = str.replace(/(đ)/g, 'd');\r\n        str = str.replace(/(ß)/g, 'B');\r\n    \r\n        // Xóa ký tự đặc biệt\r\n        str = str.replace(/([^0-9a-z-\\s])/g, '');\r\n    \r\n        // Xóa khoảng trắng thay bằng ký tự -\r\n        str = str.replace(/(\\s+)/g, '-');\r\n    \r\n        // xóa phần dự - ở đầu\r\n        str = str.replace(/^-+/g, '');\r\n    \r\n        // xóa phần dư - ở cuối\r\n        str = str.replace(/-+$/g, '');\r\n    \r\n        // return\r\n        return str;\r\n    }\r\n    console.log(toSlug(props.post.title));\r\n    return (\r\n        <div className={styles.post}>\r\n            {props.post.photo && (<img className={styles.postImg} src={props.post.photo} alt=''/>)}\r\n            <div className={styles.postInfo}>\r\n                <div className={styles.postTitle}>\r\n                    <Link to={`/post/${props.post._id}`}>\r\n                        {props.post.title}\r\n                    </Link>\r\n                </div>\r\n                \r\n                <div className={styles.postDescription}>\r\n                    {props.post.desc}\r\n                </div>\r\n                <hr/>\r\n                <span className={styles.postDate}>{new Date(props.post.createdAt).toDateString()}</span>\r\n                <div className={styles.postCats}>\r\n                    {props.post.categories.map((c,id)=>(\r\n                        <span key={id} className={styles.postCat}>{c}</span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}