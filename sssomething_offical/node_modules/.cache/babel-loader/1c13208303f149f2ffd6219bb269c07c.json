{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangt\\\\OneDrive\\\\Sang Shares Something\\\\Sang Shares Something\\\\sssomething_offical\\\\src\\\\components\\\\Layout\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styles from './Header.module.css';\nimport MainNavbar from './MainNavigation/MainNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(props) {\n  _s();\n\n  const [white, setWhite] = useState(false);\n  const [hide, setHide] = useState(false);\n  const [y, setY] = useState(window.scrollY);\n  const scrollDetect = useCallback(e => {\n    const window = e.currentTarget;\n\n    if (window.scrollY >= 1000) {\n      setWhite(true);\n      console.log(a);\n    } else {\n      setWhite(false);\n    }\n\n    if (y > window.scrollY) {\n      setHide(false);\n      console.log('up');\n    } else if (y < window.scrollY && window.scrollY >= 1200) {\n      setHide(true);\n      console.log('down');\n    }\n\n    setY(window.scrollY);\n  }, [y]); // let newPosition = window.pageYOffset;\n  // if (newPosition-oldPosition > 0 && newPosition >= 1200){\n  //     setHide(true);\n  // }\n  // else if (newPosition - oldPosition < 0) {\n  //     setHide(false);\n  // }\n  // if(newPosition >= 100){\n  //     setWhite(true);\n  // } else{\n  //     setWhite(false);\n  // }\n  // console.log('old = ', oldPosition);\n  // console.log('new = ', newPosition);\n  // oldPosition = newPosition;\n\n  useEffect(() => {\n    setHide(window.scrollY);\n    window.addEventListener('scroll', scrollDetect);\n    return () => {\n      window.removeEventListener('scroll', scrollDetect);\n    };\n  }, [scrollDetect]);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: `${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide ? styles.hide : ''}`,\n    children: /*#__PURE__*/_jsxDEV(MainNavbar, {\n      whiteHeader: white ? \"true\" : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"iTSltye38NmnIPKLeohOBHlrR7Q=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/sangt/OneDrive/Sang Shares Something/Sang Shares Something/sssomething_offical/src/components/Layout/Header/Header.js"],"names":["React","useState","useEffect","useCallback","styles","MainNavbar","Header","props","white","setWhite","hide","setHide","y","setY","window","scrollY","scrollDetect","e","currentTarget","console","log","a","addEventListener","removeEventListener","transparentNavbar","whiteNavbar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAK,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAK,CAACW,CAAD,EAAGC,IAAH,IAAWZ,QAAQ,CAACa,MAAM,CAACC,OAAR,CAAxB;AAEA,QAAMC,YAAY,GAAGb,WAAW,CAC3Bc,CAAD,IAAO;AACH,UAAMH,MAAM,GAAGG,CAAC,CAACC,aAAjB;;AACA,QAAIJ,MAAM,CAACC,OAAP,IAAkB,IAAtB,EAA2B;AACvBN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH,KAHD,MAGO;AACHZ,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AACD,QAAIG,CAAC,GAAGE,MAAM,CAACC,OAAf,EAAwB;AACpBJ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KAHD,MAGO,IAAIR,CAAC,GAAGE,MAAM,CAACC,OAAX,IAAuBD,MAAM,CAACC,OAAP,IAAkB,IAA7C,EAAmD;AACtDJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AACDP,IAAAA,IAAI,CAACC,MAAM,CAACC,OAAR,CAAJ;AACH,GAjB2B,EAkB5B,CAACH,CAAD,CAlB4B,CAAhC,CANkC,CA2B9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEJV,EAAAA,SAAS,CAAC,MAAK;AACXS,IAAAA,OAAO,CAACG,MAAM,CAACC,OAAR,CAAP;AACAD,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCN,YAAlC;AACA,WAAO,MAAM;AACTF,MAAAA,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCP,YAArC;AACH,KAFD;AAGH,GANQ,EAMN,CAACA,YAAD,CANM,CAAT;AASA,sBACI;AAAQ,IAAA,SAAS,EAAG,GAAEZ,MAAM,CAACoB,iBAAkB,IAAGhB,KAAK,GAAGJ,MAAM,CAACqB,WAAV,GAAwB,EAAG,IAAGf,IAAI,GAACN,MAAM,CAACM,IAAR,GAAa,EAAG,EAAzG;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEF,KAAK,GAAG,MAAH,GAAU;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1DuBF,M;;KAAAA,M","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\r\nimport styles from './Header.module.css'\r\nimport MainNavbar from './MainNavigation/MainNavbar'\r\n\r\nexport default function Header(props) {\r\n\r\n    const[white, setWhite] = useState(false);\r\n    const[hide, setHide] = useState(false);\r\n    const[y,setY] = useState(window.scrollY);\r\n    \r\n    const scrollDetect = useCallback(\r\n        (e) => {\r\n            const window = e.currentTarget;\r\n            if (window.scrollY >= 1000){\r\n                setWhite(true);\r\n                console.log(a);\r\n            } else {\r\n                setWhite(false);\r\n            }\r\n            if (y > window.scrollY) {\r\n                setHide(false);\r\n                console.log('up');\r\n            } else if (y < window.scrollY &&  window.scrollY >= 1200) {\r\n                setHide(true);\r\n                console.log('down');\r\n            }\r\n            setY(window.scrollY);\r\n        },\r\n        [y],\r\n    );\r\n        \r\n        // let newPosition = window.pageYOffset;\r\n        // if (newPosition-oldPosition > 0 && newPosition >= 1200){\r\n        //     setHide(true);\r\n        // }\r\n        // else if (newPosition - oldPosition < 0) {\r\n        //     setHide(false);\r\n        // }\r\n        // if(newPosition >= 100){\r\n        //     setWhite(true);\r\n        // } else{\r\n        //     setWhite(false);\r\n        // }\r\n        \r\n        // console.log('old = ', oldPosition);\r\n        // console.log('new = ', newPosition);\r\n        // oldPosition = newPosition;\r\n    \r\n    useEffect(() =>{\r\n        setHide(window.scrollY);\r\n        window.addEventListener('scroll', scrollDetect);\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollDetect);\r\n        };\r\n    }, [scrollDetect]);\r\n    \r\n\r\n    return (\r\n        <header className={`${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide?styles.hide:''}`}>\r\n            <MainNavbar whiteHeader={white ? \"true\":''}/>\r\n        </header>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}