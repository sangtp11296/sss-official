{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangt\\\\OneDrive\\\\Sang Shares Something\\\\Sang Shares Something\\\\sssomething_offical\\\\src\\\\components\\\\Layout\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styles from './Header.module.css';\nimport MainNavbar from './MainNavigation/MainNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(props) {\n  _s();\n\n  const [white, setWhite] = useState(false);\n  const [hide, setHide] = useState(false);\n  const [y, setY] = useState(window.scrollY);\n  props.writePage ? setWhite(true) : setWhite(false);\n  const scrollDetect = useCallback(e => {\n    const window = e.currentTarget; // Này là làm trắng header khi kéo xuống\n\n    if (window.scrollY >= 100) {\n      setWhite(true);\n    } else {\n      setWhite(false);\n    } // Này là làm ẩn header khi kéo xuống khoảng giá trị 1200 và hiện lại khi kéo lên\n\n\n    if (y > window.scrollY) {\n      setHide(false);\n    } else if (y < window.scrollY && window.scrollY > 1200) {\n      setHide(true);\n    } else if (y === window.scrollY) {}\n\n    setY(window.scrollY);\n  }, [y]);\n  useEffect(() => {\n    setY(window.scrollY);\n    window.addEventListener('scroll', scrollDetect);\n    return () => {\n      window.removeEventListener('scroll', scrollDetect);\n    };\n  }, [scrollDetect]);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: `${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide ? styles.hide : ''}`,\n    children: /*#__PURE__*/_jsxDEV(MainNavbar, {\n      whiteHeader: white ? \"true\" : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"iTSltye38NmnIPKLeohOBHlrR7Q=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/sangt/OneDrive/Sang Shares Something/Sang Shares Something/sssomething_offical/src/components/Layout/Header/Header.js"],"names":["React","useState","useEffect","useCallback","styles","MainNavbar","Header","props","white","setWhite","hide","setHide","y","setY","window","scrollY","writePage","scrollDetect","e","currentTarget","addEventListener","removeEventListener","transparentNavbar","whiteNavbar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAK,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAK,CAACW,CAAD,EAAGC,IAAH,IAAWZ,QAAQ,CAACa,MAAM,CAACC,OAAR,CAAxB;AACAR,EAAAA,KAAK,CAACS,SAAN,GAAgBP,QAAQ,CAAC,IAAD,CAAxB,GAA+BA,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAMQ,YAAY,GAAGd,WAAW,CAC3Be,CAAD,IAAO;AACH,UAAMJ,MAAM,GAAGI,CAAC,CAACC,aAAjB,CADG,CAEH;;AACA,QAAIL,MAAM,CAACC,OAAP,IAAkB,GAAtB,EAA0B;AACtBN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAPE,CAQH;;;AACA,QAAIG,CAAC,GAAGE,MAAM,CAACC,OAAf,EAAwB;AACpBJ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFD,MAEO,IAAIC,CAAC,GAAGE,MAAM,CAACC,OAAX,IAAuBD,MAAM,CAACC,OAAP,GAAiB,IAA5C,EAAkD;AACrDJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFM,MAGF,IAAIC,CAAC,KAAKE,MAAM,CAACC,OAAjB,EAAyB,CAAE;;AAChCF,IAAAA,IAAI,CAACC,MAAM,CAACC,OAAR,CAAJ;AACH,GAjB2B,EAkB5B,CAACH,CAAD,CAlB4B,CAAhC;AAqBAV,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,IAAI,CAACC,MAAM,CAACC,OAAR,CAAJ;AACAD,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACA,WAAO,MAAM;AACTH,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACH,KAFD;AAGH,GANQ,EAMN,CAACA,YAAD,CANM,CAAT;AASA,sBACI;AAAQ,IAAA,SAAS,EAAG,GAAEb,MAAM,CAACkB,iBAAkB,IAAGd,KAAK,GAAGJ,MAAM,CAACmB,WAAV,GAAwB,EAAG,IAAGb,IAAI,GAAGN,MAAM,CAACM,IAAV,GAAiB,EAAG,EAA7G;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEF,KAAK,GAAG,MAAH,GAAU;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzCuBF,M;;KAAAA,M","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\r\nimport styles from './Header.module.css'\r\nimport MainNavbar from './MainNavigation/MainNavbar'\r\n\r\nexport default function Header(props) {\r\n    \r\n    const[white, setWhite] = useState(false);\r\n    const[hide, setHide] = useState(false);\r\n    const[y,setY] = useState(window.scrollY);\r\n    props.writePage?setWhite(true):setWhite(false);\r\n    const scrollDetect = useCallback(\r\n        (e) => {\r\n            const window = e.currentTarget;\r\n            // Này là làm trắng header khi kéo xuống\r\n            if (window.scrollY >= 100){\r\n                setWhite(true);\r\n            } else {\r\n                setWhite(false);\r\n            }\r\n            // Này là làm ẩn header khi kéo xuống khoảng giá trị 1200 và hiện lại khi kéo lên\r\n            if (y > window.scrollY) {\r\n                setHide(false);\r\n            } else if (y < window.scrollY &&  window.scrollY > 1200) {\r\n                setHide(true);\r\n            }\r\n            else if (y === window.scrollY){}\r\n            setY(window.scrollY);\r\n        },\r\n        [y],\r\n    );\r\n    \r\n    useEffect(() =>{\r\n        setY(window.scrollY);\r\n        window.addEventListener('scroll', scrollDetect);\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollDetect);\r\n        };\r\n    }, [scrollDetect]);\r\n    \r\n\r\n    return (\r\n        <header className={`${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide ? styles.hide : ''}`}>\r\n            <MainNavbar whiteHeader={white ? \"true\":''}/>\r\n        </header>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}