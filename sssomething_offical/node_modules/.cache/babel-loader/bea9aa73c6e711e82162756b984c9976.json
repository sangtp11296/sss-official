{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangt\\\\OneDrive\\\\Sang Shares Something\\\\Sang Shares Something\\\\sssomething_offical\\\\src\\\\components\\\\Layout\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './Header.module.css';\nimport MainNavbar from './MainNavigation/MainNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(props) {\n  _s();\n\n  const [white, setWhite] = useState(false);\n  const [hide, setHide] = useState(false);\n  var oldPosition = 0;\n\n  const scrollDetect = () => {\n    let newPosition = window.pageYOffset;\n\n    if (newPosition - oldPosition > 0 && newPosition >= 1200) {\n      setHide(true);\n    } else if (newPosition - oldPosition < 0) {\n      setHide(false);\n    }\n\n    if (newPosition >= 100) {\n      setWhite(true);\n    } else {\n      setWhite(false);\n    }\n\n    console.log('old = ', oldPosition);\n    console.log('new = ', newPosition);\n    oldPosition = newPosition;\n  };\n\n  window.addEventListener('scroll', scrollDetect);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: `${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide ? styles.hide : ''}`,\n    children: /*#__PURE__*/_jsxDEV(MainNavbar, {\n      whiteHeader: white ? \"true\" : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"AFbvddHpVMKgkeZDxevlq9UGFhM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/sangt/OneDrive/Sang Shares Something/Sang Shares Something/sssomething_offical/src/components/Layout/Header/Header.js"],"names":["React","useState","styles","MainNavbar","Header","props","white","setWhite","hide","setHide","oldPosition","scrollDetect","newPosition","window","pageYOffset","console","log","addEventListener","transparentNavbar","whiteNavbar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAK,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAA/B;AAEA,MAAIS,WAAW,GAAG,CAAlB;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIC,WAAW,GAAGC,MAAM,CAACC,WAAzB;;AACA,QAAIF,WAAW,GAACF,WAAZ,GAA0B,CAA1B,IAA+BE,WAAW,IAAI,IAAlD,EAAuD;AACnDH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAGK,IAAIG,WAAW,GAAGF,WAAd,GAA4B,CAAhC,EAAmC;AACpCD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;;AACD,QAAGG,WAAW,IAAI,GAAlB,EAAsB;AAClBL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEM;AACFA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AAEDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,WAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,WAAtB;AACAF,IAAAA,WAAW,GAAGE,WAAd;AACH,GAjBD;;AAkBAC,EAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCN,YAAlC;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAG,GAAET,MAAM,CAACgB,iBAAkB,IAAGZ,KAAK,GAAGJ,MAAM,CAACiB,WAAV,GAAwB,EAAG,IAAGX,IAAI,GAACN,MAAM,CAACM,IAAR,GAAa,EAAG,EAAzG;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEF,KAAK,GAAG,MAAH,GAAU;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA/BuBF,M;;KAAAA,M","sourcesContent":["import React, {useState} from 'react'\r\nimport styles from './Header.module.css'\r\nimport MainNavbar from './MainNavigation/MainNavbar'\r\n\r\nexport default function Header(props) {\r\n\r\n    const[white, setWhite] = useState(false);\r\n    const[hide, setHide] = useState(false);\r\n\r\n    var oldPosition = 0;\r\n    const scrollDetect = () => {\r\n        let newPosition = window.pageYOffset;\r\n        if (newPosition-oldPosition > 0 && newPosition >= 1200){\r\n            setHide(true);\r\n        }\r\n        else if (newPosition - oldPosition < 0) {\r\n            setHide(false);\r\n        }\r\n        if(newPosition >= 100){\r\n            setWhite(true);\r\n        } else{\r\n            setWhite(false);\r\n        }\r\n        \r\n        console.log('old = ', oldPosition);\r\n        console.log('new = ', newPosition);\r\n        oldPosition = newPosition;\r\n    }\r\n    window.addEventListener('scroll', scrollDetect);\r\n\r\n    return (\r\n        <header className={`${styles.transparentNavbar} ${white ? styles.whiteNavbar : ''} ${hide?styles.hide:''}`}>\r\n            <MainNavbar whiteHeader={white ? \"true\":''}/>\r\n        </header>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}